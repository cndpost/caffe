
name: "test_siamese"

layer {
  name: "data"
  type: "ImageData"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    mean_file: "models/celeb_siamese_v0/celeb34372_mean.binaryproto"
  }
  image_data_param {
    source: "models/celeb_siamese_v0/clusters_2_seed=0_trn_siamese_small.txt"
    batch_size: 25
  }
}


layer {
  name: "data_b"
  type: "ImageData"
  top: "data_b"
  top: "label_b"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    mean_file: "models/celeb_siamese_v0/celeb34372_mean.binaryproto"
  }
  image_data_param {
    source: "models/celeb_siamese_v0/clusters_2_seed=0_trn_siamese_small_b.txt"
    batch_size: 25
  }
}

layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 0
    name: "conv1_w"
  }
  param {
    lr_mult: 2
    decay_mult: 0
    name: "conv1_b"
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 0
    name: "conv2_w"
  }
  param {
    lr_mult: 2
    decay_mult: 0
    name: "conv2_b"
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 0
    name: "conv3_w"
  }
  param {
    lr_mult: 2
    decay_mult: 0
    name: "conv3_b"
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 0
    name: "conv4_w"
  }
  param {
    lr_mult: 2
    decay_mult: 0
    name: "conv4_b"
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 0
    name: "conv5_w"
  }
  param {
    lr_mult: 2
    decay_mult: 0
    name: "conv5_b"
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6_celeb"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6_celeb"
  param {
    lr_mult: 1
    decay_mult: 1
    name: "fc6_w"
  }
  param {
    lr_mult: 2
    decay_mult: 0
    name: "fc6_b"
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6_celeb"
  top: "fc6_celeb"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6_celeb"
  top: "fc6_celeb"
  dropout_param {
    dropout_ratio: 0.1
  }
}

#layer {
#  name: "fc7"
#  type: "InnerProduct"
#  bottom: "fc6_celeb"
#  top: "fc7"
#  param {
#    lr_mult: 1
#    decay_mult: 1
#    name: "fc7_w"
#  }
#  param {
#    lr_mult: 2
#    decay_mult: 0
#    name: "fc7_b"
#  }
#  inner_product_param {
#    num_output: 1024
#    weight_filler {
#      type: "gaussian"
#      std: 0.005
#    }
#    bias_filler {
#      type: "constant"
#      value: 1
#    }
#  }
#}
#layer {
#  name: "relu7"
#  type: "ReLU"
#  bottom: "fc7"
#  top: "fc7"
#}
#layer {
#  name: "drop7"
#  type: "Dropout"
#  bottom: "fc7"
#  top: "fc7"
#  dropout_param {
#    dropout_ratio: 0.5
#  }
#}

layer {
  name: "conv1_b"
  type: "Convolution"
  bottom: "data_b"
  top: "conv1_b"
  param {
    lr_mult: 1
    decay_mult: 0
    name: "conv1_w"
  }
  param {
    lr_mult: 2
    decay_mult: 0
    name: "conv1_b"
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1_b"
  type: "ReLU"
  bottom: "conv1_b"
  top: "conv1_b"
}
layer {
  name: "pool1_b"
  type: "Pooling"
  bottom: "conv1_b"
  top: "pool1_b"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1_b"
  type: "LRN"
  bottom: "pool1_b"
  top: "norm1_b"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2_b"
  type: "Convolution"
  bottom: "norm1_b"
  top: "conv2_b"
  param {
    lr_mult: 1
    decay_mult: 0
    name: "conv2_w"
  }
  param {
    lr_mult: 2
    decay_mult: 0
    name: "conv2_b"
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2_b"
  type: "ReLU"
  bottom: "conv2_b"
  top: "conv2_b"
}
layer {
  name: "pool2_b"
  type: "Pooling"
  bottom: "conv2_b"
  top: "pool2_b"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2_b"
  type: "LRN"
  bottom: "pool2_b"
  top: "norm2_b"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3_b"
  type: "Convolution"
  bottom: "norm2_b"
  top: "conv3_b"
  param {
    lr_mult: 1
    decay_mult: 0
    name: "conv3_w"
  }
  param {
    lr_mult: 2
    decay_mult: 0
    name: "conv3_b"
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3_b"
  type: "ReLU"
  bottom: "conv3_b"
  top: "conv3_b"
}
layer {
  name: "conv4_b"
  type: "Convolution"
  bottom: "conv3_b"
  top: "conv4_b"
  param {
    lr_mult: 1
    decay_mult: 0
    name: "conv4_w"
  }
  param {
    lr_mult: 2
    decay_mult: 0
    name: "conv4_b"
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4_b"
  type: "ReLU"
  bottom: "conv4_b"
  top: "conv4_b"
}
layer {
  name: "conv5_b"
  type: "Convolution"
  bottom: "conv4_b"
  top: "conv5_b"
  param {
    lr_mult: 1
    decay_mult: 0
    name: "conv5_w"
  }
  param {
    lr_mult: 2
    decay_mult: 0
    name: "conv5_b"
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5_b"
  type: "ReLU"
  bottom: "conv5_b"
  top: "conv5_b"
}
layer {
  name: "pool5_b"
  type: "Pooling"
  bottom: "conv5_b"
  top: "pool5_b"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "fc6_celeb_b"
  type: "InnerProduct"
  bottom: "pool5_b"
  top: "fc6_celeb_b"
  param {
    lr_mult: 1
    decay_mult: 1
    name: "fc6_w"
  }
  param {
    lr_mult: 2
    decay_mult: 0
    name: "fc6_b"
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6_b"
  type: "ReLU"
  bottom: "fc6_celeb_b"
  top: "fc6_celeb_b"
}
layer {
  name: "drop6_b"
  type: "Dropout"
  bottom: "fc6_celeb_b"
  top: "fc6_celeb_b"
  dropout_param {
    dropout_ratio: 0.1
  }
}

#layer {
#  name: "fc7_b"
#  type: "InnerProduct"
#  bottom: "fc6_celeb_b"
#  top: "fc7_b"
#  param {
#    lr_mult: 1
#    decay_mult: 1
#    name: "fc7_w"
#  }
#  param {
#    lr_mult: 2
#    decay_mult: 0
#    name: "fc7_b"
#  }
#  inner_product_param {
#    num_output: 1024
#    weight_filler {
#      type: "gaussian"
#      std: 0.005
#    }
#    bias_filler {
#      type: "constant"
#      value: 1
#    }
#  }
#}
#layer {
#  name: "relu7_b"
#  type: "ReLU"
#  bottom: "fc7_b"
#  top: "fc7_b"
#}
#layer {
#  name: "drop7_b"
#  type: "Dropout"
#  bottom: "fc7_b"
#  top: "fc7_b"
#  dropout_param {
#    dropout_ratio: 0.5
#  }
#}



layer {
  name: "label_diff"
  type: "Eltwise"
  eltwise_param {
    coeff: 1
    coeff: -1
  }
  bottom: "label"
  bottom: "label_b"
  top: "label_diff"
}

layer {
    name: "absval"
    type: "AbsVal"
    bottom: "label_diff"
    top: "label_diff_abs"
}

layer {
  name: "label_diff_abs_thresh"
  type: "Threshold"
  bottom: "label_diff_abs"
  top: "same_label"
}



layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "fc6_celeb"
  top: "ip2"
  param {
    lr_mult: 1
    name: "ip2_w"
  }
  param {
    lr_mult: 2
    name: "ip2_b"
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layer {
  name: "ip2_b"
  type: "InnerProduct"
  bottom: "fc6_celeb_b"
  top: "ip2_b"
  param {
    lr_mult: 1
    name: "ip2_w"
  }
  param {
    lr_mult: 2
    name: "ip2_b"
  }
  inner_product_param {
    num_output: 64
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}


layer {
    name: "diff"
    type: "Eltwise"
    eltwise_param {
      coeff: 1
      coeff: -1
    }
    bottom: "ip2"
    bottom: "ip2_b"
    top: "diff"
}

#layer {
#    name: "absval"
#    type: "AbsVal"
#    bottom: "diff"
#    top: "absval"
#}


layer {
    name: "sqrval"
    type: "Eltwise"
    eltwise_param {
      operation: PROD
    }
    bottom: "diff"
    bottom: "diff"
    top: "sqrval"
}

layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "sqrval"
  top: "ip3"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1
    weight_filler {
      type: "constant"
      value: 1.0
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "ip4"
  type: "InnerProduct"
  bottom: "ip3"
  top: "ip4"
  param {
    lr_mult: 1
    decay_mult: 0
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}

layer {
  name: "distrelu"
  type: "ReLU"
  bottom: "ip4"
  top: "ip4"
}

layer {
  name: "siamese_softmax_loss"
  type: "SoftmaxWithLoss"
  bottom: "ip4"
  bottom: "same_label"
  top: "siamese_softmax_loss"
  loss_weight: 0.5
}

layer {
  name: "siamese_accuracy"
  type: "Accuracy"
  bottom: "ip4"
  bottom: "same_label"
  top: "siamese_accuracy"
}


layer {
  name: "contrastive_loss"
  type: "ContrastiveLoss"
  bottom: "ip2"
  bottom: "ip2_b"
  bottom: "same_label"
  top: "contrastive_loss"
  contrastive_loss_param {
    margin: 1
  }
  loss_weight: 1.0
}

